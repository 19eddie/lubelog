@using CarCareTracker.Helper
@inject IConfigHelper config
@inject ITranslationHelper translator
@{
    var userConfig = config.GetUserConfig(User);
    var userLanguage = userConfig.UserLanguage;
}
@model ReportParameter
    <div id="columnSelector" style="max-height:50vh; overflow-y:auto;">
        <ul class="list-group">
            @foreach (string column in Model.VisibleColumns)
            {
                <li class="list-group-item text-start">
                    <input class="form-check-input column-default" type="checkbox" value="@column" id="visibleColumn_@column" checked>
                    <label class="form-check-label stretched-link" for="visibleColumn_@column">@(translator.Translate(userLanguage, column == nameof(GenericReportModel.DataType) ? "Type" : column))</label>
                </li>
            }
            @foreach (string extraField in Model.ExtraFields)
            {
                <li class="list-group-item text-start">
                    <input class="form-check-input column-extrafield" type="checkbox" value="@extraField" id="extraField_@extraField">
                    <label class="form-check-label stretched-link" for="extraField_@extraField">@extraField</label>
                </li>
            }
        </ul>
    </div>
    <h2 class="swal2-title">Filter by Tags</h2>
    <div class="mt-2 text-start">
        <select class="form-select mb-2" id="tagSelector">
            <!option value="@TagFilter.Exclude">@translator.Translate(userLanguage, "Exclude Records with these Tags")</!option>
            <!option value="@TagFilter.IncludeOnly">@translator.Translate(userLanguage, "Only Include Records with these Tags")</!option>
        </select>
        <select multiple id="tagSelectorInput"></select>
    </div>