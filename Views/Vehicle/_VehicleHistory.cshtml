@using CarCareTracker.Helper
@inject IConfigHelper config
@inject ITranslationHelper translator
@{
    var userConfig = config.GetUserConfig(User);
    var hideZero = userConfig.HideZero;
    var userLanguage = userConfig.UserLanguage;
}
@model VehicleHistoryViewModel
<div class="vehicleDetailTabContainer">
    <div class="row mt-2">
        <div class="d-flex">
            <img src="/defaults/lubelogger_logo.png" />
            <span class="display-6 ms-5">@translator.Translate(userLanguage, "Vehicle Maintenance Report")</span>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-6">
            <ul class="list-group">
                <li class="list-group-item">
                    <span class="display-6">@($"{Model.VehicleData.Year} {Model.VehicleData.Make} {Model.VehicleData.Model}")</span>
                </li>
                <li class="list-group-item">
                    <span class="lead">@Model.VehicleData.LicensePlate</span>
                </li>
                <li class="list-group-item">
                    @if (Model.VehicleData.IsElectric)
                    {
                        <span><i class="bi bi-ev-station me-2"></i>@translator.Translate(userLanguage, "Electric")</span>
                    }
                    else
                    {
                        <span><i class="bi bi-fuel-pump me-2"></i>@translator.Translate(userLanguage, "Gasoline")</span>
                    }
                </li>
            </ul>
        </div>
        <div class="col-6">
            <ul class="list-group">
                <li class="list-group-item">@($"{translator.Translate(userLanguage, "Last Reported Odometer Reading")}: {Model.Odometer}") </li>
                <li class="list-group-item">@($"{translator.Translate(userLanguage, "Average Fuel Economy")}: {Model.MPG}") </li>
                <li class="list-group-item">@($"{translator.Translate(userLanguage, "Total Spent(excl. fuel)")}: {Model.TotalCost.ToString("C")}") </li>
                <li class="list-group-item">@($"{translator.Translate(userLanguage, "Total Spent on Fuel")}: {Model.TotalGasCost.ToString("C")}") </li>
            </ul>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-12">
            <table class="table table-hover">
                <thead>
                    <tr class="d-flex">
                        <th scope="col" class="col-2 servicehistorytype">@translator.Translate(userLanguage, "Type")</th>
                        <th scope="col" class="col-1 servicehistorydate">@translator.Translate(userLanguage, "Date")</th>
                        <th scope="col" class="col-1">@translator.Translate(userLanguage, "Odometer")</th>
                        <th scope="col" class="col-3">@translator.Translate(userLanguage, "Description")</th>
                        <th scope="col" class="col-1">@translator.Translate(userLanguage, "Cost")</th>
                        <th scope="col" class="col-4">@translator.Translate(userLanguage, "Notes")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (GenericReportModel reportData in Model.VehicleHistory)
                    {
                        <tr class="d-flex">
                            <td class="col-2 servicehistorytype">
                                @if (reportData.DataType == ImportMode.ServiceRecord)
                                {
                                    <span><i class="bi bi-card-checklist me-2"></i>@translator.Translate(userLanguage, "Service")</span>
                                }
                                else if (reportData.DataType == ImportMode.RepairRecord)
                                {
                                    <span><i class="bi bi-exclamation-octagon me-2"></i>@translator.Translate(userLanguage, "Repair")</span>
                                }
                                else if (reportData.DataType == ImportMode.UpgradeRecord)
                                {
                                    <span><i class="bi bi-wrench-adjustable me-2"></i>@translator.Translate(userLanguage, "Upgrade")</span>
                                }
                                else if (reportData.DataType == ImportMode.TaxRecord)
                                {
                                    <span><i class="bi bi-currency-dollar me-2"></i>@translator.Translate(userLanguage, "Tax")</span>
                                }
                            </td>
                            <td class="col-1 servicehistorydate">@reportData.Date.ToShortDateString()</td>
                            <td class="col-1">@(reportData.Odometer == default ? "---" : reportData.Odometer.ToString("N0"))</td>
                            <td class="col-3">@reportData.Description</td>
                            <td class="col-1">@((hideZero && reportData.Cost == default) ? "---" : reportData.Cost.ToString("C"))</td>
                            <td class="col-4 text-wrap">@CarCareTracker.Helper.StaticHelper.TruncateStrings(reportData.Notes, 100)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
